{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 9d2e89e84b724fa74070","webpack:///./src/index.js"],"names":["SQUARE","width","height","MIN_POST_RATIO","MAX_POST_RATIO","getRatio","image","fitIntoSquare","scale","Math","min","applyScale","images","copyImages","newImages","newImg","JSON","parse","stringify","_width","_height","push","prepareRow","fixImbalanced","rowHeight","map","reduce","a","b","row","ratio","scaleImagesToWidth","fixImbalancedImages","prepareCol","colWidth","col","scaleImagesToHeight","RECOMMENDED_WIDTH","length","imbalancedNum","balancedNum","balancedWidth","_imbalanced","adjustRowColImages","fitImageToRow","prepareChunkVariations","maxChunks","variants","i","slice","p1","p2","bigPart","v","unshift","prepareVariants","isSmallGroup","variations","singleRow","rows","cols","getOptimalVariant","optimalVariant","optimalRatio","variant","mosaicShape","abs","preparePreview","color","singlePreview","preview","twoImgPreviews","previews","manyImgPreviews","nestedImage","module","exports"],"mappings":"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","file":"imagallery.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Imagallery\"] = factory();\n\telse\n\t\troot[\"Imagallery\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9d2e89e84b724fa74070","const SQUARE = {width: 100, height: 66.66}\nconst MIN_POST_RATIO = SQUARE.width / SQUARE.height\nconst MAX_POST_RATIO = 3.5\n\nconst getRatio = (image) => {\n  return image.width / image.height\n}\n\nconst fitIntoSquare = (image) => {\n  const scale = Math.min(SQUARE.width / image.width, SQUARE.height / image.height)\n  return applyScale(image, scale)\n}\n\nconst applyScale = (image, scale) => {\n  const {width, height} = image\n  image.width = image.width * scale\n  image.height = image.height * scale\n  if (image.images) {\n    for (let image of image.images) {\n      applyScale(image, scale)\n    }\n  }\n  return image\n}\n\nconst copyImages = (images) => {\n  const newImages = []\n  for (let image of images) {\n    let newImg = JSON.parse(JSON.stringify(image))\n    newImg._width = image.width\n    newImg._height = image.height\n    newImages.push(newImg)\n  }\n  return newImages\n}\n\n// scales images in a list in a way that they are fit into a single row\nconst prepareRow = (images, fixImbalanced = false) => {\n  const rowHeight = 100 / images.map((image) => {\n    return getRatio(image)\n  }).reduce((a, b) => { return a + b }, 0)\n\n  let row = {width: 100, height: rowHeight}\n\n  row.images = images.map((image) => {\n    const ratio = getRatio(image)\n    image.width = row.height * ratio\n    image.height = row.height\n\n    if (image.images) {\n      scaleImagesToWidth(image.images, image.width)\n    }\n    return image\n  })\n\n  row.ratio = getRatio(row)\n  if (fixImbalanced) { row = fixImbalancedImages(row) }\n  return row\n}\n\nconst prepareCol = (images) => {\n  const colWidth = 100 / images.map((image) => {\n    return 1 / getRatio(image)\n  }).reduce((a, b) => { return a + b }, 0)\n\n  const col = {width: colWidth, height: 100}\n\n  col.images = images.map((image) => {\n    const ratio = getRatio(image)\n    image.width = col.width\n    image.height = col.width / ratio\n\n    if (image.images) {\n      scaleImagesToHeight(image.images, image.height)\n    }\n    return image\n  })\n\n  col.ratio = getRatio(col)\n  return col\n}\n\nconst fixImbalancedImages = (row) => {\n  const RECOMMENDED_WIDTH = 1 / (row.images.length + 1)\n\n  if (row.ratio < MIN_POST_RATIO) {\n    let imbalancedNum = 0\n    let balancedNum = 0\n    let balancedWidth = 0\n\n    for (let image of row.images) {\n      if (getRatio(image) < RECOMMENDED_WIDTH) {\n        image._imbalanced = true\n        imbalancedNum++\n      } else {\n        balancedWidth += image.width\n        balancedNum++\n      }\n    }\n\n    for (let image of row.images) {\n      if (image._imbalanced) {\n        image.width = balancedWidth * RECOMMENDED_WIDTH / (1 - RECOMMENDED_WIDTH * imbalancedNum)\n        image.height = row.height\n        delete image._imbalanced\n        adjustRowColImages(image)\n      }\n    }\n    return prepareRow(row.images)\n  } else {\n    return row\n  }\n}\n\nconst adjustRowColImages = (col) => {\n  if (col.images) {\n    scaleImagesToWidth(col.images, col.width)\n  }\n}\n\nconst scaleImagesToWidth = (images, width) => {\n  for (let image of images) {\n    let ratio = getRatio(image)\n    image.width = width\n    image.height = width / ratio\n  }\n}\n\nconst scaleImagesToHeight = (images, height) => {\n  for (let image of images) {\n    let ratio = getRatio(image)\n    image.width = height * ratio\n    image.height = height\n  }\n}\n\nconst fitImageToRow = (image, row) => {\n  if (row.ratio < MIN_POST_RATIO) {\n    image.width = row.height * getRatio(image)\n    image.height = 100 / MIN_POST_RATIO\n  } else if (row.ratio > MAX_POST_RATIO) {\n    const scale = MAX_POST_RATIO / row.ratio\n    image.width = row.height * getRatio(image)\n    image.height = 100 / MAX_POST_RATIO\n  }\n\n  return image\n}\n\nconst prepareChunkVariations = (images, maxChunks) => {\n  const variants = []\n  if (maxChunks >= 1) variants.push([images])\n\n  if (maxChunks >= 2) {\n    for (let i = 0; i < images.length; i++) {\n      if (i === 0) continue\n      variants.push([images.slice(0, i), images.slice(i, images.length)])\n    }\n  }\n\n  if (maxChunks === 3) {\n    for (let [p1, p2] of variants) {\n      if (!p1 || !p2) continue\n      const bigPart = p1.length > 1 ? p1 : p2\n\n      for (let i = 0; i < p1.length; i++) {\n        if (i === 0) continue\n        let v = [bigPart.slice(0, i), bigPart.slice(i, p1.length)]\n        p1.length > 1 ? v.push(p2) : v.unshift(p1)\n        variants.push(v)\n      }\n    }\n  }\n\n  return variants\n}\n\nconst prepareVariants = (images) => {\n  const variants = []\n  const isSmallGroup = images.length === 3 || images.length === 4\n  const variations = prepareChunkVariations(images, isSmallGroup ? 2 : 3)\n\n  for (let v of variations) {\n    if (v.length === 1) {\n      variants.push({singleRow: v[0]})\n    } else {\n      variants.push({rows: v})\n      if (isSmallGroup && v[0].length === 1) {\n        variants.push({cols: v})\n      }\n    }\n  }\n\n  return variants\n}\n\nconst getOptimalVariant = (images) => {\n  const variants = prepareVariants(images)\n  let optimalVariant\n  let optimalRatio\n\n  for (let variant of variants) {\n    let mosaicShape\n\n    if (variant.singleRow) {\n      mosaicShape = prepareRow(variant.singleRow)\n    } else if (variant.rows) {\n      const rows = variant.rows.map((row) => { return prepareRow(row) })\n      mosaicShape = prepareCol(rows)\n    } else if (variant.cols) {\n      const cols = variant.cols.map((col) => { return prepareCol(col) })\n      mosaicShape = prepareRow(cols)\n    }\n\n    const ratio = getRatio(mosaicShape)\n    if (optimalVariant) {\n      if (Math.abs(ratio - 1.5) < Math.abs(optimalRatio - 1.5)) {\n        optimalRatio = ratio\n        optimalVariant = variant\n      }\n    } else {\n      optimalRatio = ratio\n      optimalVariant = variant\n    }\n  }\n\n  return optimalVariant\n}\n\nconst preparePreview = (image, {width, height}) => {\n  return {color: image.color, width, height}\n}\n\nconst singlePreview = (images) => {\n  const image = images[0]\n  const preview = fitIntoSquare(image)\n  return [preview]\n}\n\nconst twoImgPreviews = (images) => {\n  const previews = []\n  const row = prepareRow(images, true)\n\n  for (let image of row.images) {\n    const preview = fitImageToRow(image, row)\n    previews.push(preview)\n  }\n\n  return previews\n}\n\nconst manyImgPreviews = (images) => {\n  const previews = []\n  const variant = getOptimalVariant(images)\n\n  if (variant.singleRow) {\n    const row = prepareRow(variant.singleRow, true)\n    for (let image of row.images) {\n      previews.push(fitImageToRow(image, row))\n    }\n  } else if (variant.cols) {\n    const cols = variant.cols.map((col) => { return prepareCol(col) })\n    const row = prepareRow(cols)\n\n    for (let col of row.images) {\n      for (let nestedImage of col.images) {\n        previews.push(nestedImage)\n      }\n    }\n  } else if (variant.rows) {\n    const rows = variant.rows.map((row) => { return prepareRow(row) })\n    const col = prepareCol(rows)\n    const scale = 100 / col.width\n\n    for (let row of col.images) {\n      for (let nestedImage of row.images) {\n        previews.push(applyScale(nestedImage, scale))\n      }\n    }\n  }\n\n  return previews\n}\n\nmodule.exports = (images) => {\n  // don't touch original images\n  images = copyImages(images)\n\n  if (images.length === 1) {\n    return singlePreview(images)\n  } else if (images.length === 2) {\n    return twoImgPreviews(images)\n  } else if (images.length > 2) {\n    return manyImgPreviews(images)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}