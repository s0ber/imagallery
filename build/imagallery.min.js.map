{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap cad10ef8722f73e8f7c8","webpack:///./src/index.js"],"names":["SQUARE","width","height","MIN_POST_RATIO","MAX_POST_RATIO","getRatio","image","fitIntoSquare","scale","Math","min","applyScale","images","setOriginalSizes","forEach","_width","_height","prepareRow","fixImbalanced","rowHeight","map","reduce","a","b","row","ratio","scaleImagesToWidth","fixImbalancedImages","prepareCol","colWidth","col","scaleImagesToHeight","RECOMMENDED_WIDTH","length","imbalancedNum","balancedNum","balancedWidth","_imbalanced","adjustRowColImages","fitImageToRow","prepareChunkVariations","maxChunks","variants","push","i","slice","p1","p2","bigPart","v","unshift","isSmallGroup","variations","singleRow","rows","cols","getOptimalVariant","prepareVariants","optimalVariant","optimalRatio","variant","mosaicShape","abs","getPreviews","previews","p","previewImg","nestedImage"],"mappings":"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","file":"imagallery.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Imagallery\"] = factory();\n\telse\n\t\troot[\"Imagallery\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cad10ef8722f73e8f7c8","const SQUARE = {width: 100, height: 66.66}\nconst MIN_POST_RATIO = SQUARE.width / SQUARE.height\nconst MAX_POST_RATIO = 3.5\n\nconst getRatio = (image) => {\n  return image.width / image.height\n}\n\nconst fitIntoSquare = (image) => {\n  const scale = Math.min(SQUARE.width / image.width, SQUARE.height / image.height)\n  return applyScale(image, scale)\n}\n\nconst applyScale = (image, scale) => {\n  const {width, height} = image\n  image.width = image.width * scale\n  image.height = image.height * scale\n  if (image.images) {\n    for (let image of image.images) {\n      applyScale(image, scale)\n    }\n  }\n  return image\n}\n\nconst setOriginalSizes = (images) => {\n  images.forEach((image) => {\n    image._width = image.width\n    image._height = image.height\n  })\n}\n\n// scales images in a list in a way that they are fit into a single row\nconst prepareRow = (images, fixImbalanced = false) => {\n  const rowHeight = 100 / images.map((image) => {\n    return getRatio(image)\n  }).reduce((a, b) => { return a + b }, 0)\n\n  let row = {width: 100, height: rowHeight}\n\n  row.images = images.map((image) => {\n    const ratio = getRatio(image)\n    image.width = row.height * ratio\n    image.height = row.height\n\n    if (image.images) {\n      scaleImagesToWidth(image.images, image.width)\n    }\n    return image\n  })\n\n  row.ratio = getRatio(row)\n  if (fixImbalanced) { row = fixImbalancedImages(row) }\n  return row\n}\n\nconst prepareCol = (images) => {\n  const colWidth = 100 / images.map((image) => {\n    return 1 / getRatio(image)\n  }).reduce((a, b) => { return a + b }, 0)\n\n  const col = {width: colWidth, height: 100}\n\n  col.images = images.map((image) => {\n    const ratio = getRatio(image)\n    image.width = col.width\n    image.height = col.width / ratio\n\n    if (image.images) {\n      scaleImagesToHeight(image.images, image.height)\n    }\n    return image\n  })\n\n  col.ratio = getRatio(col)\n  return col\n}\n\nconst fixImbalancedImages = (row) => {\n  const RECOMMENDED_WIDTH = 1 / (row.images.length + 1)\n\n  if (row.ratio < MIN_POST_RATIO) {\n    let imbalancedNum = 0\n    let balancedNum = 0\n    let balancedWidth = 0\n\n    row.images.forEach((image) => {\n      if (getRatio(image) < RECOMMENDED_WIDTH) {\n        image._imbalanced = true\n        imbalancedNum++\n      } else {\n        balancedWidth += image.width\n        balancedNum++\n      }\n    })\n\n    row.images.forEach((image) => {\n      if (image._imbalanced) {\n        image.width = balancedWidth * RECOMMENDED_WIDTH / (1 - RECOMMENDED_WIDTH * imbalancedNum)\n        image.height = row.height\n        delete image._imbalanced\n        adjustRowColImages(image)\n      }\n    })\n    return prepareRow(row.images)\n  } else {\n    return row\n  }\n}\n\nconst adjustRowColImages = (col) => {\n  if (col.images) {\n    scaleImagesToWidth(col.images, col.width)\n  }\n}\n\nconst scaleImagesToWidth = (images, width) => {\n  for (let image of images) {\n    let ratio = getRatio(image)\n    image.width = width\n    image.height = width / ratio\n  }\n}\n\nconst scaleImagesToHeight = (images, height) => {\n  for (let image of images) {\n    let ratio = getRatio(image)\n    image.width = height * ratio\n    image.height = height\n  }\n}\n\nconst fitImageToRow = (image, row) => {\n  if (row.ratio < MIN_POST_RATIO) {\n    return {width: row.height * getRatio(image), height: 100 / MIN_POST_RATIO}\n  } else if (row.ratio > MAX_POST_RATIO) {\n    const scale = MAX_POST_RATIO / row.ratio\n    return {width: row.height * getRatio(image), height: 100 / MAX_POST_RATIO}\n  } else {\n    return image\n  }\n}\n\nconst prepareChunkVariations = (images, maxChunks) => {\n  const variants = []\n  if (maxChunks >= 1) variants.push([images])\n\n  if (maxChunks >= 2) {\n    for (let i = 0; i < images.length; i++) {\n      if (i === 0) continue\n      variants.push([images.slice(0, i), images.slice(i, images.length)])\n    }\n  }\n\n  if (maxChunks === 3) {\n    for (let [p1, p2] of variants) {\n      if (!p1 || !p2) continue\n      const bigPart = p1.length > 1 ? p1 : p2\n\n      for (let i = 0; i < p1.length; i++) {\n        if (i === 0) continue\n        let v = [bigPart.slice(0, i), bigPart.slice(i, p1.length)]\n        p1.length > 1 ? v.push(p2) : v.unshift(p1)\n        variants.push(v)\n      }\n    }\n  }\n\n  return variants\n}\n\nexport default (images) => {\n  const variants = []\n  const isSmallGroup = images.length === 3 || images.length === 4\n  const variations = prepareChunkVariations(images, isSmallGroup ? 2 : 3)\n\n  for (let v of variations) {\n    if (v.length === 1) {\n      variants.push({singleRow: v[0]})\n    } else {\n      variants.push({rows: v})\n      if (isSmallGroup && v[0].length === 1) {\n        variants.push({cols: v})\n      }\n    }\n  }\n\n  return variants\n}\n\nconst getOptimalVariant = (images) => {\n  const variants = prepareVariants(images)\n  let optimalVariant\n  let optimalRatio\n\n  for (let variant of variants) {\n    let mosaicShape\n\n    if (variant.singleRow) {\n      mosaicShape = prepareRow(variant.singleRow)\n    } else if (variant.rows) {\n      const rows = variant.rows.map((row) => { return prepareRow(row) })\n      mosaicShape = prepareCol(rows)\n    } else if (variant.cols) {\n      const cols = variant.cols.map((col) => { return prepareCol(col) })\n      mosaicShape = prepareRow(cols)\n    }\n\n    const ratio = getRatio(mosaicShape)\n    if (optimalVariant) {\n      if (Math.abs(ratio - 1.5) < Math.abs(optimalRatio - 1.5)) {\n        optimalRatio = ratio\n        optimalVariant = variant\n      }\n    } else {\n      optimalRatio = ratio\n      optimalVariant = variant\n    }\n  }\n\n  return optimalVariant\n}\n\nconst getPreviews = (images) => {\n  setOriginalSizes(images)\n\n  const previews = []\n\n  if (images.length === 1) {\n    const image = images[0]\n    const p = fitIntoSquare(image)\n    previews.push(p)\n  } else if (images.length === 2) {\n    let row = prepareRow(images, true)\n\n    for (let image of row.images) {\n      const previewImg = fitImageToRow(image, row)\n      const p = previewImg\n      previews.push(p)\n    }\n  } else if (images.length > 2) {\n    const variant = getOptimalVariant(images)\n\n    if (variant.singleRow) {\n      const row = prepareRow(variant.singleRow, true)\n      for (let image of row.images) {\n        const previewImg = fitImageToRow(image, row)\n        const p = previewImg\n        previews.push(p)\n      }\n    } else if (variant.cols) {\n      const cols = variant.cols.map((col) => { return prepareCol(col) })\n      const row = prepareRow(cols)\n\n      for (let col of row.images) {\n        for (let nestedImage of col.images) {\n          // const previewImg = fitImageToRow(nestedImage, row)\n          const p = nestedImage\n          previews.push(p)\n        }\n      }\n    } else if (variant.rows) {\n      const rows = variant.rows.map((row) => { return prepareRow(row) })\n      const col = prepareCol(rows)\n      const scale = 100 / col.width\n\n      for (let row of col.images) {\n        for (let nestedImage of row.images) {\n          // const previewImg = fitImageToRow(nestedImage, row)\n          const p = applyScale(nestedImage, scale)\n          previews.push(p)\n        }\n      }\n    }\n  }\n\n  return previews\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}