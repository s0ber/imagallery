{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 5391f67b00e3ad80f654","webpack:///./src/index.js"],"names":["MOBILE_SINGLE_PREVIEW_RATIO","DESKTOP_SINGLE_PREVIEW_RATIO","MOBILE_TARGET_RATIO","DESKTOP_TARGET_RATIO","MAX_VERTICAL_IMAGE_RATIO","getRatio","image","width","height","applyScale","scale","images","copyImages","newImages","newImg","JSON","parse","stringify","_width","_height","push","prepareRow","rowHeight","map","reduce","a","b","row","ratio","scaleImagesToWidth","prepareCol","colWidth","col","scaleImagesToHeight","prepareChunkVariations","maxChunks","variants","i","length","slice","moreVariants","p1","p2","v","prepareVariants","isSmallGroup","variations","singleRow","rows","cols","getOptimalVariant","options","optimalVariant","optimalRatio","targetRatio","type","variant","mosaicShape","Math","abs","preparePreview","color","singlePreview","scaleTo","min","preview","twoImgPreviews","previews","manyImgPreviews","nestedImage","fixVerticalImages","module","exports","processorFn"],"mappings":"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","file":"imagallery.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Imagallery\"] = factory();\n\telse\n\t\troot[\"Imagallery\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5391f67b00e3ad80f654","const MOBILE_SINGLE_PREVIEW_RATIO = 0.666\nconst DESKTOP_SINGLE_PREVIEW_RATIO = 1\n\nconst MOBILE_TARGET_RATIO = 0.66\nconst DESKTOP_TARGET_RATIO = 1.5\n\nconst MAX_VERTICAL_IMAGE_RATIO = 0.7\n\nconst getRatio = (image) => {\n  return image.width / image.height\n}\n\nconst applyScale = (image, scale) => {\n  const {width, height} = image\n  image.width *= scale\n  image.height *= scale\n  if (image.images) {\n    for (let image of image.images) {\n      applyScale(image, scale)\n    }\n  }\n  return image\n}\n\nconst copyImages = (images) => {\n  const newImages = []\n  for (let image of images) {\n    let newImg = JSON.parse(JSON.stringify(image))\n    newImg._width = image.width\n    newImg._height = image.height\n    newImages.push(newImg)\n  }\n  return newImages\n}\n\n// scales images in a list in a way that they are fit into a single row\nconst prepareRow = (images) => {\n  const rowHeight = 100 / images.map((image) => {\n    return getRatio(image)\n  }).reduce((a, b) => { return a + b }, 0)\n\n  let row = {width: 100, height: rowHeight}\n\n  row.images = images.map((image) => {\n    const ratio = getRatio(image)\n    image.width = row.height * ratio\n    image.height = row.height\n\n    if (image.images) {\n      scaleImagesToWidth(image.images, image.width)\n    }\n    return image\n  })\n\n  row.ratio = getRatio(row)\n  return row\n}\n\nconst prepareCol = (images) => {\n  const colWidth = 100 / images.map((image) => {\n    return 1 / getRatio(image)\n  }).reduce((a, b) => { return a + b }, 0)\n\n  const col = {width: colWidth, height: 100}\n\n  col.images = images.map((image) => {\n    const ratio = getRatio(image)\n    image.width = col.width\n    image.height = col.width / ratio\n\n    if (image.images) {\n      scaleImagesToHeight(image.images, image.height)\n    }\n    return image\n  })\n\n  col.ratio = getRatio(col)\n  return col\n}\n\nconst scaleImagesToWidth = (images, width) => {\n  for (let image of images) {\n    let ratio = getRatio(image)\n    image.width = width\n    image.height = width / ratio\n  }\n}\n\nconst scaleImagesToHeight = (images, height) => {\n  for (let image of images) {\n    let ratio = getRatio(image)\n    image.width = height * ratio\n    image.height = height\n  }\n}\n\nconst prepareChunkVariations = (images, maxChunks) => {\n  const variants = []\n  if (maxChunks >= 1) variants.push([images])\n\n  if (maxChunks >= 2) {\n    for (let i = 0; i < images.length; i++) {\n      if (i === 0) continue\n      variants.push([images.slice(0, i), images.slice(i, images.length)])\n    }\n  }\n\n  if (maxChunks === 3) {\n    const moreVariants = []\n    for (let [p1, p2] of variants) {\n      if (!p1 || !p2) continue\n\n      for (let i = 0; i < p2.length; i++) {\n        if (i === 0) continue\n        let v = [p1, p2.slice(0, i), p2.slice(i, p2.length)]\n        moreVariants.push(v)\n      }\n    }\n    for (let v of moreVariants) { variants.push(v) }\n  }\n\n  return variants\n}\n\nconst prepareVariants = (images) => {\n  const variants = []\n  const isSmallGroup = images.length === 3 || images.length === 4\n  const variations = prepareChunkVariations(images, isSmallGroup ? 2 : 3)\n\n  for (let v of variations) {\n    if (v.length === 1) {\n      variants.push({singleRow: v[0]})\n    } else {\n      variants.push({rows: v})\n      if (isSmallGroup && v[0].length === 1) {\n        variants.push({cols: v})\n      }\n    }\n  }\n\n  return variants\n}\n\nconst getOptimalVariant = (images, options) => {\n  const variants = prepareVariants(images)\n  let optimalVariant\n  let optimalRatio\n  let targetRatio = options.type == 'desktop' ? DESKTOP_TARGET_RATIO : MOBILE_TARGET_RATIO\n\n  for (let variant of variants) {\n    let mosaicShape\n\n    if (variant.singleRow) {\n      mosaicShape = prepareRow(variant.singleRow)\n    } else if (variant.rows) {\n      const rows = variant.rows.map((row) => { return prepareRow(row) })\n      mosaicShape = prepareCol(rows)\n    } else if (variant.cols) {\n      const cols = variant.cols.map((col) => { return prepareCol(col) })\n      mosaicShape = prepareRow(cols)\n    }\n\n    const ratio = getRatio(mosaicShape)\n    if (optimalVariant) {\n      if (Math.abs(ratio - targetRatio) < Math.abs(optimalRatio - targetRatio)) {\n        optimalRatio = ratio\n        optimalVariant = variant\n      }\n    } else {\n      optimalRatio = ratio\n      optimalVariant = variant\n    }\n  }\n\n  return optimalVariant\n}\n\nconst preparePreview = (image, {width, height}) => {\n  return {color: image.color, width, height}\n}\n\nconst singlePreview = (images, options) => {\n  const image = images[0]\n  const targetRatio = options.type == 'desktop' ? DESKTOP_SINGLE_PREVIEW_RATIO : MOBILE_SINGLE_PREVIEW_RATIO\n  const scaleTo = {\n    width: 100,\n    height: 100 / targetRatio\n  }\n  const scale = Math.min(scaleTo.width / image.width, scaleTo.height / image.height)\n  const preview = applyScale(image, scale)\n\n  return [preview]\n}\n\nconst twoImgPreviews = (images, options) => {\n  const previews = []\n  const row = prepareRow(images)\n\n  for (let image of row.images) {\n    previews.push(image)\n  }\n\n  return previews\n}\n\nconst manyImgPreviews = (images, options) => {\n  const previews = []\n  const variant = getOptimalVariant(images, options)\n\n  if (variant.singleRow) {\n    const row = prepareRow(variant.singleRow, true)\n    for (let image of row.images) {\n      previews.push(image)\n    }\n  } else if (variant.cols) {\n    const cols = variant.cols.map((col) => { return prepareCol(col) })\n    const row = prepareRow(cols)\n\n    for (let col of row.images) {\n      for (let nestedImage of col.images) {\n        previews.push(nestedImage)\n      }\n    }\n  } else if (variant.rows) {\n    const rows = variant.rows.map((row) => { return prepareRow(row) })\n    const col = prepareCol(rows)\n    const scale = 100 / col.width\n\n    for (let row of col.images) {\n      for (let nestedImage of row.images) {\n        previews.push(applyScale(nestedImage, scale))\n      }\n    }\n  }\n\n  return previews\n}\n\nconst fixVerticalImages = (images) => {\n  for (let image of images) {\n    if (getRatio(image) >= MAX_VERTICAL_IMAGE_RATIO) continue\n    image.height = image.width / MAX_VERTICAL_IMAGE_RATIO\n  }\n}\n\nmodule.exports = (images, options = {type: 'desktop'}) => {\n  let processorFn\n  images = copyImages(images) // don't touch original images\n\n  fixVerticalImages(images)\n\n  if (images.length === 1) {\n    processorFn = singlePreview\n  } else if (images.length === 2) {\n    processorFn = twoImgPreviews\n  } else if (images.length > 2) {\n    processorFn = manyImgPreviews\n  } else {\n    processorFn = () => {}\n  }\n\n  return processorFn(images, options)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}